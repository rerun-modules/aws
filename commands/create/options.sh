# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: Fri Feb  1 04:32:34 CST 2013
#
#/ usage: aws:create  --key <>  --aws-access-key <>  --aws-secret-key <> [ --group <>]  --instance-type <m1.small>  --ami-id <>  --zone <us-east-1a>  --hostname <>  --purpose <> 

# _rerun_options_parse_ - Parse the command arguments and set option variables.
#
#     rerun_options_parse "$@"
#
# Arguments:
#
# * the command options and their arguments
#
# Notes:
# 
# * Sets shell variables for any parsed options.
# * The "-?" help argument prints command usage and will exit 2.
# * Return 0 for successful option parse.
#
rerun_options_parse() {

    while [ "$#" -gt 0 ]; do
        OPT="$1"
        case "$OPT" in
            --key) rerun_option_check $# $1; KEY=$2 ; shift ;;
            --aws-access-key) rerun_option_check $# $1; AWS_ACCESS_KEY=$2 ; shift ;;
            --aws-secret-key) rerun_option_check $# $1; AWS_SECRET_KEY=$2 ; shift ;;
            --group) rerun_option_check $# $1; GROUP=$2 ; shift ;;
            --instance-type) rerun_option_check $# $1; INSTANCE_TYPE=$2 ; shift ;;
            --ami-id) rerun_option_check $# $1; AMI_ID=$2 ; shift ;;
            --zone) rerun_option_check $# $1; ZONE=$2 ; shift ;;
            --hostname) rerun_option_check $# $1; HOSTNAME=$2 ; shift ;;
            --purpose) rerun_option_check $# $1; PURPOSE=$2 ; shift ;;
            # help option
            -?)
                rerun_option_usage
                exit 2
                ;;
            # end of options, just arguments left
            *)
              break
        esac
        shift
    done

    # Set defaultable options.
    [ -z "$INSTANCE_TYPE" ] && INSTANCE_TYPE="$(rerun_property_get $RERUN_MODULE_DIR/options/instance-type DEFAULT)"
    [ -z "$ZONE" ] && ZONE="$(rerun_property_get $RERUN_MODULE_DIR/options/zone DEFAULT)"
    # Check required options are set
    [ -z "$KEY" ] && { echo >&2 "missing required option: --key" ; return 2 ; }
    [ -z "$AWS_ACCESS_KEY" ] && { echo >&2 "missing required option: --aws-access-key" ; return 2 ; }
    [ -z "$AWS_SECRET_KEY" ] && { echo >&2 "missing required option: --aws-secret-key" ; return 2 ; }
    [ -z "$INSTANCE_TYPE" ] && { echo >&2 "missing required option: --instance-type" ; return 2 ; }
    [ -z "$AMI_ID" ] && { echo >&2 "missing required option: --ami-id" ; return 2 ; }
    [ -z "$ZONE" ] && { echo >&2 "missing required option: --zone" ; return 2 ; }
    [ -z "$HOSTNAME" ] && { echo >&2 "missing required option: --hostname" ; return 2 ; }
    [ -z "$PURPOSE" ] && { echo >&2 "missing required option: --purpose" ; return 2 ; }
    # If option variables are declared exportable, export them.
    export AWS_SECRET_KEY
    #
    return 0
}


# Initialize the options variables to null.
KEY=
AWS_ACCESS_KEY=
AWS_SECRET_KEY=
GROUP=
INSTANCE_TYPE=
AMI_ID=
ZONE=
HOSTNAME=
PURPOSE=


