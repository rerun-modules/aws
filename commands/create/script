#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: aws:create: "Create a virtual machine"
#/ usage: rerun aws:create  --key <>  --aws-access-key <>  --aws-secret-key <> [ --group <>]  --instance-type <m1.small>  --ami-id <>  --zone <us-east-1a>  --hostname <>  --purpose <> 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh create || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: aws:create. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: KEY AWS_ACCESS_KEY AWS_SECRET_KEY GROUP INSTANCE_TYPE AMI_ID ZONE HOSTNAME PURPOSE

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -
# Put the command implementation here.

RD_OPTION_PURPOSE=MONGO
RD_OPTION_G=sg-4492932c

for i in {1..${COUNT}}; do

  OUT=$(mktemp "/tmp/rerun.aws.XXXXX")
  ec2-run-instances ${AMI_ID} \
    --group ${GROUP} \
    --key ${KEY} \
    --instance-type ${INSTANCE_TYPE} \
    --availability-zone ${ZONE} > ${OUT}

  INSTANCEID=$(cat ${OUT} | grep INSTANCE | awk '{ print $2}')
  rm ${OUT}

  if [[ $HOSTNAME = "EMPTY" ]]; then
    HOSTNAME=` ec2-describe-instances $INSTANCEID | grep INSTANCE | awk '{ print $4 }' `
  fi

  ec2addtag \
    ${INSTANCEID} \
    --tag Name=${HOSTNAME} \
    --tag Purpose=${PURPOSE}

done
# - - -

# Done. Exit with last command exit status.
exit $?

